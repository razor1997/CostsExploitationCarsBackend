using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using API.Interfaces;
using AutoMapper;
using API.Entities;
using API.DTOs;
using AutoMapper.QueryableExtensions;
using Microsoft.EntityFrameworkCore;

namespace API.Data
{
    public class UserCarRepairRepository : IUserCarRepairRepository
    {
        private DataContext _context;
        private IMapper _mapper;
        public UserCarRepairRepository (DataContext context, IMapper mapper)
        {
            _context = context;
            _mapper = mapper;
        }
        public void Update(CarRepair carRepair)
        {
            _context.Entry(carRepair).State = EntityState.Modified;
        }
        public async Task<bool> SaveAllAsync()
        {
            return await _context.SaveChangesAsync() > 0;
        }
        public async Task<CarRepair> GetRepair(int id)
        {
            return await _context.CarRepairs.FindAsync(id);
        }

        public async Task<IEnumerable<UserCarRepairDto>> GetAllCarRepairs(int IdCar)
        {
            return await _context.CarRepairs.Where(x => x.IdCar == IdCar)
                .ProjectTo<UserCarRepairDto>(_mapper.ConfigurationProvider)
                .ToListAsync();
        }
        public async Task<CarRepair> Add(CarRepair repair)
        {
            var result = await _context.CarRepairs.AddAsync(repair);
            return result.Entity;
        }
        public async Task<UserCarRepairDto> Delete(int Id)
        {
            CarRepair repair = await _context.CarRepairs
                .FirstOrDefaultAsync(repair => repair.Id == Id);
            if(repair != null)
            {
                _context.CarRepairs.Remove(repair);
                await _context.SaveChangesAsync();
            }
            return null;
        }
        public async Task<IEnumerable<UserCarRepairDto>> GetAllRepairsByMark(String markCar)
        {
            return await _context.CarRepairs.Where(x => x.car.Mark == markCar)
                .ProjectTo<UserCarRepairDto>(_mapper.ConfigurationProvider)
                .ToListAsync();
        }
    }
}
